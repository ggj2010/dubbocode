<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- dubbo生产者别名 -->
    <dubbo:application name="userProvider" version="1.0"/>
    <dubbo:registry address="zookeeper://127.0.0.1:2181" />
    <!--
    id 协议BeanId，可以在<dubbo:service proivder="">中引用此ID dubbo
    protocol 协议名称 dubbo
    threads 服务线程池大小(固定大小 100
    threadpool  线程池类型，可选：fixed/cached
    payload 请求及响应数据包大小限制，单位：字节 88388608(=8M)
    server 协议的服务器端实现类型，比如：dubbo协议的mina,netty等，http协议的jetty,servlet等 dubbo协议缺省为netty，http协议缺省为servlet
     client  协议的客户端实现类型,dubbo协议缺省为netty
     serialization 协议序列化方式，当协议支持多种序列化方式时使用，比如：dubbo协议的dubbo,hessian2,java,compactedjava，以及http协议的json,xml等 dubbo协议缺省为hessian2，rmi协议缺省为java，http协议缺省为json
    filter 服务提供方远程调用过程拦截器名称，多个名称用逗号分隔 可以参考 http://blog.csdn.net/mj158518/article/details/47379799
   group 服务分组，当一个接口有多个实现，可以用分组区分
   weight 服务权重
   default.retries 远程服务调用重试次数，不包括第一次调用，不需要重试请设为0

   merger 分组聚合 按组合并返回结果，比如菜单服务，接口一样，但有多种实现，用group区分，现在消费方需从每种group中调用一次返回结果，合并结果返回，这样就可以实现聚合菜单项。
    -->
    <!--配置了dubbo:provider的话 所有dubbo:service都会默认继承这个-->
  <dubbo:provider id="providerOne" threads="100" threadpool="fixed" payload="88388608"  client="netty"
                   serialization="hessian2" version="1.0" group="group1" weight="1" retries="0"
   />
  <dubbo:provider id="providerTwo" threads="100" threadpool="fixed" payload="88388608"  client="netty"
                   serialization="hessian2" version="1.0" group="group2" weight="1" retries="0"
   />

    <dubbo:service interface="com.ggj.myinterface.account.service.UserService"  ref="userServiceImp" provider="providerOne" />
    <dubbo:service interface="com.ggj.myinterface.account.service.UserService"  ref="userServiceImpTwo" provider="providerTwo"/>
<!--
    <dubbo:service interface="com.ggj.myinterface.account.service.UserService"  ref="userServiceImp" group="group1" />
    <dubbo:service interface="com.ggj.myinterface.account.service.UserService"  ref="userServiceImpTwo" group="group2"/>
-->

    <dubbo:service interface="com.ggj.myinterface.sys.service.MergeService"  group="group1" ref="mergeServiceImp1" merger="true"/>
    <dubbo:service interface="com.ggj.myinterface.sys.service.MergeService"  group="group2" ref="mergeServiceImp2" />
    <dubbo:service interface="com.ggj.myinterface.sys.service.MergeService"  group="group3" ref="mergeServiceImp3" />

    <!--参数回调-->
    <dubbo:service interface="com.ggj.myinterface.callback.CallbackService" ref="callbackServiceImp">
        <dubbo:method name="callback">
            <!--指定索引的加回调-->
            <dubbo:argument index="1" callback="true" />
        </dubbo:method>
    </dubbo:service>

</beans>